---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    fabric8.io/metrics-path: dashboard/file/camel-routes.json/?var-project={{ .Values.subsystemInstant.subsystemName }}&var-version={{ .Values.subsystemImageProperties.imageVersion }}
  labels:
    app: {{ .Values.subsystemInstant.subsystemName }}
    version: "{{ .Values.subsystemInstant.processingPlantVersion }}"
    group: {{ .Values.subsystemInstant.solutionGroup }}
  name: {{ .Values.subsystemInstant.subsystemName }}
spec:
  replicas: {{ .Values.deploymentMode.processingPlantReplicationCount | default 2 }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{ .Values.subsystemInstant.subsystemName }}
      group: {{ .Values.subsystemInstant.solutionGroup }}
  template:
    metadata:
      annotations:
        fabric8.io/metrics-path: dashboard/file/camel-routes.json/?var-project={{ .Values.subsystemInstant.subsystemName }}&var-version={{ .Values.subsystemImageProperties.imageVersion }}
      labels:
        app: {{ .Values.subsystemInstant.subsystemName }}
        version: {{ .Values.subsystemInstant.processingPlantVersion }}
        group: {{ .Values.subsystemInstant.solutionGroup }}
        cluster: {{ .Values.deploymentZone.securityZoneName }}
        date: "{{ date "20060102-150405" .Release.Time }}"
    spec:
      serviceAccountName: jgroups-kubeping-service-account
      {{- if (.Values.acrSecretName) }} 
      imagePullSecrets:
        - name: {{ .Values.acrSecretName }}
      {{- end }}
#      affinity:
#        nodeAffinity:
#          preferredDuringSchedulingIgnoredDuringExecution:
#          - weight: 1
#            preference:
#              matchExpressions:
#              - key: computeResources
#                operator: In
#                values:
#                - High
      containers:
        - env:
#          - name: TRUSTSTORE_PASSWORD
#            valueFrom:
#             secretKeyRef:
#              name: {{ .Values.subsystemInstant.subsystemName  }}-secrets
#              key: truststorePassword
#          - name: KEY_PASSWORD
#            valueFrom:
#             secretKeyRef:
#              name: {{ .Values.subsystemInstant.subsystemName  }}-secrets
#              key: keyPassword
#          - name: HAPI_API_KEY
#            valueFrom:
#             secretKeyRef:
#              name: hapi-fhir-secrets
#              key: hapiApiKey
          {{- if (.Values.wildflyAdminUser) }} 
          - name: WILDFLY_MANAGEMENT_USER
            value: {{ .Values.wildflyAdminUser }}
          # TODO this should be a secret, or potentially no management user at all
          - name: WILDFLY_MANAGEMENT_PASSWORD
            value: {{ .Values.wildflyAdminPwd }}
          {{- end }}
          - name: WILDFLY_LOG_LEVEL
            value: "{{ .Values.wildflyLogLevel | default "WARN" }}"
          - name: PEGACORN_LOG_CATEGORY
            value: "{{ .Values.pegacornLogCategory | default "net.fhirfactory.pegacorn" }}"
          - name: PEGACORN_LOG_LEVEL
            value: "{{ .Values.pegacornLogLevel | default .Values.wildflyLogLevel | default "WARN" }}"
          - name: AETHER_LOG_CATEGORY
            value: "{{ .Values.aetherLogCategory | default "au.gov.act.health" }}"
          - name: AETHER_LOG_LEVEL
            value: "{{ .Values.aetherLogLevel | default .Values.wildflyLogLevel | default "WARN" }}"
          - name: JAVAX_NET_DEBUG
            value: "{{ .Values.javaxNetDebug | default "none" }}"
          - name: WILDFLY_ENABLE_DEBUG
            value: "{{ .Values.wildflyEnableDebug | default "no" }}"
          - name: KUBERNETES_SERVICE_NAME
            value: {{ .Values.subsystemInstant.subsystemName }}
          - name: HELM_RELEASE_TIME
            value: "{{ date "20060102-150405" .Release.Time }}"
          - name: MY_HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: MY_POD_SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JVM_MAX_HEAP_SIZE
            value: "{{ .Values.jvmMaxHeapSizeMB | default 1024 }}m"
          - name: DEPLOYMENT_CONFIG_FILE
            value: {{ .Values.deploymentMode.deploymentConfig }}
          # Set the minimum memory that will be available on the node to assign to the container to be the jvmMaxHeapSizeMB plus 128 MB
          # for the native heap and operation system processes associated with running Java
          # See https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/#motivation-for-memory-requests-and-limits
          # and https://www.alibabacloud.com/blog/kubernetes-demystified-restrictions-on-java-application-resources_594108
          resources:
            requests:
              memory: "{{ add 128 (.Values.jvmMaxHeapSizeMB | default 1024 ) }}Mi"
          image: {{ .Values.subsystemImageProperties.repository }}{{ .Values.subsystemImageProperties.imageName }}:{{ .Values.subsystemImageProperties.imageVersion }}
          imagePullPolicy: {{ .Values.subsystemImageProperties.pullPolicy }}
          livenessProbe:
            httpGet:
              path: {{ .Values.kubeLivelinessProbe.webServicePath }}
              port: {{ .Values.kubeLivelinessProbe.serverPort }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.kubeLivelinessProbe.startupDelay }}
          name: {{ .Values.subsystemInstant.subsystemName }}
          ports:
            - containerPort: {{ .Values.edgeAnswer.serverPort }}
              name: {{ .Values.edgeAnswer.name }}
              protocol: TCP
            {{- if (.Values.wildflyAdminUser) }} 
            - containerPort: 9993
              name: admin
              protocol: TCP
            {{- end }}
            {{- if (eq (.Values.wildflyEnableDebug | default "No") "Yes") }} 
            - containerPort: 8787
              name: debug
              protocol: TCP
            {{- end }}
          readinessProbe:
            httpGet:
              path: {{ .Values.kubeReadinessProbe.webServicePath }}
              port: {{ .Values.kubeReadinessProbe.serverPort }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.kubeReadinessProbe.startupDelay }}
          securityContext:
            privileged: false
          volumeMounts:
            {{- range $volumeinstances := .Values.volumeMounts.mappedLocalStorage }}
            - name: {{ $volumeinstances.volumeName }}
              mountPath: {{ $volumeinstances.volumeMountPath }}
            {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds | default 30 }}
      volumes:
        {{- range $volumeinstances := .Values.volumeMounts.mappedLocalStorage }}
        - name: {{ $volumeinstances.volumeName }}
          hostPath:
            path: {{ $volumeinstances.volumeHostPath }}
        {{- end }}